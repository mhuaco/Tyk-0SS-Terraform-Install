{
  "version": 4,
  "terraform_version": "1.9.6",
  "serial": 21,
  "lineage": "faf68210-846c-c6c5-16bb-c5758261c024",
  "outputs": {
    "gateway_nodeport_url": {
      "value": "http://localhost:30622/hello",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "redis",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-redis-data",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "7.2.4",
                "chart": "redis",
                "name": "tyk-redis-data",
                "namespace": "tyk",
                "revision": 1,
                "values": "{\"auth\":{\"password\":\"Fqe6hqnLPxrNLFWE\"}}",
                "version": "19.0.2"
              }
            ],
            "name": "tyk-redis-data",
            "namespace": "tyk",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.password",
                "type": "",
                "value": "Fqe6hqnLPxrNLFWE"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "19.0.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "tyk",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "tyk-oss",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "tyk-oss",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "tyk-oss",
                "name": "tyk-oss",
                "namespace": "tyk",
                "revision": 1,
                "values": "{\"fullnameOverride\":\"\",\"global\":{\"components\":{\"operator\":false,\"pump\":false},\"hashKeys\":true,\"license\":{\"operator\":\"\"},\"oasValidateExamples\":false,\"oasValidateSchemaDefaults\":false,\"redis\":{\"addrs\":[\"tyk-redis-data-master.tyk.svc.cluster.local:6379\"],\"pass\":\"Fqe6hqnLPxrNLFWE\",\"storage\":{\"database\":0}},\"secrets\":{\"APISecret\":\"CHANGEME\",\"useSecretName\":\"\"},\"servicePorts\":{\"gateway\":8080},\"tls\":{\"gateway\":false,\"useDefaultTykCertificate\":true}},\"nameOverride\":\"\",\"operatorSecret\":{\"enabled\":true,\"orgID\":\"orgid\"},\"tyk-gateway\":{\"fullnameOverride\":\"\",\"gateway\":{\"affinity\":{},\"analyticsEnabled\":\"\",\"autoscaling\":{},\"containerPort\":8080,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"control\":{\"annotations\":{},\"containerPort\":9696,\"enabled\":false,\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example-control-api-domain.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"port\":9696,\"type\":\"ClusterIP\"},\"enableFixedWindowRateLimiter\":false,\"enablePathPrefixMatching\":true,\"enablePathSuffixMatching\":true,\"enableStrictRoutes\":true,\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"hostName\":\"tyk-gw.local\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"docker.tyk.io/tyk-gateway/tyk-gateway\",\"tag\":\"v5.3.6\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"initContainers\":{\"setupDirectories\":{\"repository\":\"busybox\",\"resources\":{},\"tag\":1.32}},\"kind\":\"Deployment\",\"nodeSelector\":{},\"opentelemetry\":{\"connectionTimeout\":1,\"contextPropagation\":\"tracecontext\",\"enabled\":false,\"endpoint\":\"localhost:4317\",\"exporter\":\"grpc\",\"headers\":{},\"resourceName\":\"tyk\",\"sampling\":{\"parentBased\":false,\"rate\":0.5,\"type\":\"AlwaysOn\"},\"spanProcessorType\":\"batch\",\"tls\":{\"caFileName\":\"\",\"certFileName\":\"\",\"certificateSecretName\":\"\",\"enabled\":false,\"insecureSkipVerify\":true,\"keyFileName\":\"\",\"maxVersion\":1.3,\"minVersion\":1.2,\"secretMountPath\":\"\"}},\"pdb\":{\"enabled\":false,\"maxUnavailable\":\"\",\"minAvailable\":\"\"},\"podAnnotations\":{},\"podLabels\":{},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"externalTrafficPolicy\":\"Local\",\"loadBalancerIP\":\"\",\"type\":\"ClusterIP\"},\"tls\":{\"certificates\":[{\"cert_file\":\"/etc/certs/tyk-gateway/tls.crt\",\"domain_name\":\"*\",\"key_file\":\"/etc/certs/tyk-gateway/tls.key\"}],\"certificatesMountPath\":\"/etc/certs/tyk-gateway\",\"insecureSkipVerify\":false,\"secretName\":\"tyk-default-tls-secret\"},\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}]},\"nameOverride\":\"\"},\"tyk-operator\":{\"annotations\":{},\"envFrom\":[{\"secretRef\":{\"name\":\"tyk-operator-conf\"}}],\"envVars\":[{\"name\":\"TYK_HTTPS_INGRESS_PORT\",\"value\":\"8443\"},{\"name\":\"TYK_HTTP_INGRESS_PORT\",\"value\":\"8080\"}],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":\"\",\"healthProbePort\":8081,\"hostNetwork\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"tykio/tyk-operator\",\"tag\":\"v1.0.0\"},\"imagePullSecrets\":[],\"metricsPort\":8080,\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podSecurityContext\":{\"allowPrivilegeEscalation\":false},\"rbac\":{\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"gcr.io/kubebuilder/kube-rbac-proxy\",\"tag\":\"v0.8.0\"},\"port\":8443,\"resources\":{}},\"replicaCount\":1,\"resources\":{},\"serviceMonitor\":false,\"webhookPort\":9443},\"tyk-pump\":{\"fullnameOverride\":\"\",\"nameOverride\":\"\",\"pump\":{\"affinity\":{},\"backend\":[\"prometheus\"],\"containerPort\":9090,\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"extraEnvs\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"docker.tyk.io/tyk-pump/tyk-pump\",\"tag\":\"v1.11.0\"},\"imagePullSecrets\":[],\"mongoGraphPump\":{\"collectionName\":\"tyk_graph_analytics\"},\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"prometheusPump\":{\"customMetrics\":\"\",\"host\":\"\",\"path\":\"/metrics\",\"prometheusOperator\":{\"enabled\":false,\"podMonitorSelector\":{\"release\":\"prometheus-stack\"}}},\"replicaCount\":1,\"resources\":{},\"securityContext\":{\"fsGroup\":2000,\"runAsNonRoot\":true,\"runAsUser\":1000},\"service\":{\"annotations\":{},\"enabled\":false,\"externalTrafficPolicy\":\"Local\",\"port\":9090,\"type\":\"ClusterIP\"},\"sqlGraphPump\":{\"tableName\":\"tyk_analytics_graphs\"},\"tolerations\":[],\"uptimePumpBackend\":\"\"}}}",
                "version": "2.1.0"
              }
            ],
            "name": "tyk-oss",
            "namespace": "tyk",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.tyk.io/public/helm/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "global.redis.pass",
                "type": "",
                "value": "Fqe6hqnLPxrNLFWE"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# nameOverride overrides the Chart name. It is truncated to 63 characters.\nnameOverride: \"\"\n\n# fullnameOverride overrides App name. It is truncated to 63 characters.\nfullnameOverride: \"\"\n\n# operatorSecret controls if a secret needed to connect to Operator will be created\noperatorSecret:\n  # enabled if set to true creates secret\n  enabled: true\n  # OSS doesn't have concept of OrgID. But we need to support some features (eg. basic auth key) in OSS\n  # You can set it to any arbitary value\n  orgID: \"orgid\"\n\nglobal:\n  components:\n    # pump determines whether the pump component should be installed.\n    pump: false\n    # operator determines whether Tyk Operator component should be installed or not.\n    # Tyk Operator needs cert-manager to be installed beforehand. Make sure that cert-manager is installed.\n    # For further details, please refer to https://tyk.io/docs/tyk-stack/tyk-operator/installing-tyk-operator/\n    operator: false\n\n  license:\n    # The license key needed by Tyk Operator to work.\n    #\n    # NOTE: If you do not want to store license as a plain text in the file, you can use a Kubernetes secret\n    # that stores the operator license. Please see `.global.secrets.useSecretName`.\n    operator: \"\"\n\n  servicePorts:\n    # The port at which the gateway service can be found at\n    gateway: 8080\n\n  tls:\n    # When true, sets the gateway protocol to HTTPS.\n    gateway: false\n\n    # When true, it will install the certificate present in the templates folder, set to false when using\n    # a custom TLS certificate to avoid overwriting yours\n    useDefaultTykCertificate: true\n\n  secrets:\n    # APISecret sets secret in tyk.conf\n    APISecret: CHANGEME\n    # useSecretName can be used if you don't want to store plaintext secrets in the Helm value file and would\n    # rather provide the k8s Secret externally.\n    # You can set following fields in the secret\n    # - APISecret - Sets node_secret and secret in tyk.conf\n    # - OperatorLicense - Tyk Operator license key\n    useSecretName: \"\"\n\n  redis:\n    # The addrs value will allow you to set your Redis addresses.\n    #\n    # If you are using Redis (e.g. Bitnami Redis at bitnami/redis) then enter single\n    # endpoint. If using sentinel connection mode for Redis, please update the port number (typically 26379).\n    #\n    # If using a Redis Cluster (e.g. bitnami/redis-cluster), you can list\n    # the endpoints of the redis instances or use the cluster configuration endpoint.\n    #\n    # Default value: redis.{{ .Release.Namespace }}.svc:6379\n    addrs:\n        - tyk-redis-data-master.tyk.svc.cluster.local:6379\n    #   Example using tyk simple redis chart\n    #   - redis.tyk.svc:6379\n    #   Example using bitnami/redis\n    #   - tyk-redis-master.tyk.svc:6379\n    #   Example using bitnami/redis with sentinel\n    #   - tyk-redis.tyk.svc:26379\n    #   Example using bitnami/redis-cluster\n    #   - tyk-redis-redis-cluster.tyk.svc:6379\n\n    # Redis password\n    # If you're using Bitnami Redis chart (e.g. bitnami/redis) please input\n    # your password in the field below\n    pass: \"\"\n\n    # Redis password can also be provided via a secret. Provide the name of the secret and key below.\n    # passSecret:\n    #   name: \"\"\n    #   keyName: \"\"\n\n    # Enables SSL for Redis connection. Redis instance will have to support that.\n    # Default value: false\n    # useSSL: true\n\n    # Allows usage of self-signed certificates when connecting to an encrypted Redis database.\n    # sslInsecureSkipVerify: false\n\n    # Path to the CA file.\n    # sslCAFile: \"\"\n\n    # The Volume mount path\n    # Default value: /etc/certs\n    # certificatesMountPath: \"\"\n\n    # Path to the cert file.\n    # sslCertFile: \"\"\n\n    # Path to the key file.\n    # sslKeyFile: \"\"\n\n    # Maximum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.\n    # Default value: 1.3\n    # tlsMaxVersion: \"1.3\"\n\n    # Minimum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.\n    # Default value: 1.2\n    # tlsMinVersion: \"1.2\"\n\n    # Name of the tls secret. A secret needs to be created for this manually using the name as specified here\n    # secretName: \"\"\n\n    # Name of the volume where the secret will be mounted\n    # volumeName: \"\"\n\n    # If using \"Redis Cluster\" set enableCluster to true\n    # (e.g. if using bitnami/redis-cluster)\n    # enableCluster: true\n\n    # Enables sentinel connection mode for Redis. If enabled, provide both\n    # mandatory values for sentinelPass and masterName.\n    # enableSentinel: false\n\n    # Redis sentinel password, only required while enableSentinel is true.\n    # For bitnami/redis the same password as Redis above\n    # sentinelPass: \"\"\n\n    # Redis sentinel master name, only required while enableSentinel is true.\n    # For bitnami/redis typically redis-master\n    # masterName: \"\"\n\n    # By default, the database index is 0. Setting the database index is not\n    # supported with redis cluster. As such, if you have enableCluster: true,\n    # then this value should be omitted or explicitly set to 0.\n    storage:\n      database: 0\n\n  # hashKeys is used to enable/disable key hashing.\n  hashKeys: true\n\n  # Enables validation of examples in the OAS spec. Defaults to false.\n  # It is used to set TYK_GW_OAS_VALIDATE_EXAMPLES\n  oasValidateExamples: false\n  # Enables validation of schema defaults in the OAS spec. Defaults to false.\n  # It is used to set TYK_GW_OAS_VALIDATE_SCHEMA_DEFAULTS\n  oasValidateSchemaDefaults: false\n\ntyk-gateway:\n  ## Default values for tyk-gateway chart.\n  ## This is a YAML-formatted file.\n  ## Declare variables to be passed into your templates.\n  ## See Tyk Helm documentation for installation details:\n  ## https://tyk.io/docs/tyk-oss/ce-helm-chart/\n  ## Registry for all Tyk images - https://hub.docker.com/u/tykio\n\n  # nameOverride overrides the Chart name. It is truncated to 63 characters.\n  # Default value: tyk-gateway.name\n  nameOverride: \"\"\n\n  # fullnameOverride overrides App name. It is truncated to 63 characters.\n  # Default value: tyk-gateway.fullname\n  fullnameOverride: \"\"\n\n  gateway:\n    # The hostname to bind the Gateway to.\n    hostName: tyk-gw.local\n\n    # EnableFixedWindowRateLimiter enables fixed window rate limiting.\n    # FixedWindow will allow requests up to the configured rate limit,\n    # and then block traffic for the remainder of the window duration.\n    # It has minimal impact on redis, however it will not protect against\n    # traffic spikes, it does not have spike arrest behaviour.\n    enableFixedWindowRateLimiter: false\n\n    tls:\n      # The name of the secret which should contain the TLS certificate you want to use with the gateway deployment\n      secretName: tyk-default-tls-secret\n      # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.\n      insecureSkipVerify: false\n\n      # certificatesMountPath corresponds to the mount path of the secret.\n      certificatesMountPath: \"/etc/certs/tyk-gateway\"\n      # certificates is an array of strings, used to set TYK_GW_HTTPSERVEROPTIONS_CERTIFICATES\n      certificates:\n        - domain_name: \"*\"\n          cert_file: \"/etc/certs/tyk-gateway/tls.crt\"\n          key_file: \"/etc/certs/tyk-gateway/tls.key\"\n\n    # kind is type of k8s object to be created for gateway.\n    kind: Deployment\n\n    # podAnnotations is annotations to be added to Tyk Gateway pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Gateway.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in gateway Pod\n    podLabels: {}\n\n    # replicaCount specifies number of replicas to be created if kind is Deployment.\n    replicaCount: 1\n\n    # PodDisruptionBudget configuration\n    pdb:\n      enabled: false\n      # minAvailable and maxUnavailable configure thresholds for PodDisruptionBudget resource\n      # per PodDisruptionBudget spec they are mutually exclusive, but this chart allows\n      # setting them both, in which case minAvailable will take precedence\n      minAvailable: \"\"\n      maxUnavailable: \"\"\n\n    # autoscaling configuration if kind IS NOT DaemonSet\n    autoscaling: {}\n    #  enabled: true\n    #  minReplicas: 1\n    #  maxReplicas: 3\n    #  averageCpuUtilization: 60\n    #  averageMemoryUtilization: null\n    #  autoscalingTemplate:\n    #   Custom or additional autoscaling metrics\n    #   ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics\n    #    - type: Pods\n    #      pods:\n    #        metric:\n    #          name: nginx_ingress_controller_nginx_process_requests_total\n    #        target:\n    #          type: AverageValue\n    #          averageValue: 10000m\n\n    image:\n      # image repository for Tyk Gateway\n      repository: docker.tyk.io/tyk-gateway/tyk-gateway\n\n      # image tag for Tyk Gateway\n      tag: v5.3.6\n\n      # image pull policy for Tyk Gateway\n      pullPolicy: IfNotPresent\n\n    initContainers:\n      # image configuration for the initContainer that setups up the tyk directory structure\n      setupDirectories:\n        repository: busybox\n        tag: 1.32\n        resources: {}\n        # If you do want to specify resources, uncomment the following\n        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n        # limits:\n        #   cpu: 100m\n        #   memory: 128Mi\n        # requests:\n        #   cpu: 100m\n        #   memory: 128Mi\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    # The port which will be exposed on the container for tyk-gateway\n    containerPort: 8080\n\n    service:\n      # type of service\n      type: ClusterIP\n\n      # external traffic policy of the service. Set it only if you are using LoadBalancer service type\n      externalTrafficPolicy: Local\n\n      # specify loadBalancerIP if the service type is load balancer\n      loadBalancerIP: \"\"\n\n      # annotations for service\n      annotations: {}\n\n    control:\n      # If enabled, exposes control port of the gateway\n      enabled: false\n\n      # control port of gateway\n      containerPort: 9696\n\n      # port number for control port service\n      port: 9696\n\n      # service type for control port service\n      type: ClusterIP\n\n      # annotations for control port service\n      annotations: {}\n\n      # control ingress\n      ingress:\n        # if enabled, creates an ingress resource for the gateway control\n        enabled: false\n\n        # specify ingress controller class name\n        className: \"\"\n\n        # annotations for ingress\n        annotations: {}\n\n        # ingress rules\n        hosts:\n          - host: chart-example-control-api-domain.local\n            paths:\n              - path: /\n                pathType: ImplementationSpecific\n\n        # tls configuration for ingress\n        #  - secretName: chart-example-tls\n        #    hosts:\n        #      - chart-example-different-domain-possible.local\n        tls: []\n\n    # Creates an ingress object in k8s. Will require an ingress-controller and\n    # annotation to that ingress controller.\n    ingress:\n      # if enabled, creates an ingress resource for the gateway\n      enabled: false\n\n      # specify ingress controller class name\n      className: \"\"\n\n      # annotations for ingress\n      annotations: {}\n\n      # ingress rules\n      hosts:\n        - host: chart-example.local\n          paths:\n            - path: /\n              pathType: ImplementationSpecific\n\n      # tls configuration for ingress\n      #  - secretName: chart-example-tls\n      #    hosts:\n      #      - chart-example.local\n      tls: []\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n    resources: {}\n\n    # securityContext values for gateway pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext values for gateway container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # node labels for gateway pod assignment\n    nodeSelector: {}\n\n    # tolerations for gateway pod assignment\n    tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n    # affinity for gateway pod assignment\n    affinity: {}\n\n    # analyticsEnabled property is used to enable/disable analytics.\n    # If set to empty or nil, analytics will be enabled/disabled based on `global.components.pump`.\n    analyticsEnabled: \"\"\n\n    # opentelemetry is used to configure opentelemetry for Tyk Gateway\n    opentelemetry:\n      # Used to enable/disable opentelemetry\n      enabled: false\n      # exporter is used to define the type of the exporter to sending data in OTLP protocol\n      # Valid values are \"grpc\" or \"http\"\n      exporter: grpc\n      # endpoint defines OpenTelemetry collector endpoint to connect to.\n      endpoint: localhost:4317\n      # A map of headers that will be sent with HTTP requests to the collector.\n      # It should be set to map of string to string\n      headers: {}\n      # Timeout for establishing a connection to the collector\n      connectionTimeout: 1\n      # Name of the resource that will be used to identify the resource.\n      resourceName: tyk\n      # Type of the span processor to use. Valid values are “simple” or “batch”.\n      spanProcessorType: batch\n      # Type of the context propagator to use. Valid values are \"tracecontext\" and \"b3\".\n      contextPropagation: tracecontext\n      # TLS configuration for the exporter.\n      tls:\n        # Flag that can be used to enable TLS\n        enabled: false\n        # Flag that can be used to skip TLS verification if TLS is enabled\n        insecureSkipVerify: true\n        # Maximum TLS version that is supported.\n        maxVersion: 1.3\n        # Minimum TLS version that is supported\n        minVersion: 1.2\n        # Path to the cert file\n        certFileName: \"\"\n        # Path to the key file\n        keyFileName: \"\"\n        # Path to CA file\n        caFileName: \"\"\n        # Existing secret that stores TLS and CA Certificate\n        certificateSecretName: \"\"\n        # Mount path on which certificate secret should be mounted\n        secretMountPath: \"\"\n      sampling:\n        # Refers to the policy used by OpenTelemetry to determine whether a particular trace should be sampled or not.\n        type: \"AlwaysOn\"\n        # Parameter for the TraceIDRatioBased sampler type and represents the percentage of traces to be sampled.\n        rate: 0.5\n        # Rule that ensures that if we decide to record data for a particular operation, we’ll also record data for\n        # all the subsequent work that operation causes\n        parentBased: false\n\n    # EnablePathPrefixMatching changes the URL matching from wildcard mode to prefix mode.\n    # If prefix matching is enabled, the match will be performed\n    # - as a prefix match (/json*).\n    # - against the full listen path and versioning URL (/listen-path/v4/json)\n    # - the stripped listen path URL (/v4/json), and the stripped version information (/json).\n    enablePathPrefixMatching: true\n    # EnablePathSuffixMatching changes the URL matching to match as a suffix.\n    # For example, /json is matched as /json$ against\n    # - the full listen path and versioning URL (/listen-path/v4/json)\n    # - the stripped listen path URL (/v4/json)\n    # - the stripped version information (/json)\n    enablePathSuffixMatching: true\n    # EnableStrictRoutes changes the routing to avoid nearest-neighbour requests on overlapping routes\n    # - if disabled, `/apple` will route to `/app`, the current default behavior,\n    # - if enabled, `/app` only responds to `/app`, `/app/` and `/app/*` but not `/apple`\n    # Regular expressions and parameterized routes will be left alone regardless of this setting.\n    enableStrictRoutes: true\n\n    # extraEnvs is used to set gateway env variables\n    # - name: TYK_GW_HTTPSERVEROPTIONS_SSLINSECURESKIPVERIFY\n    #   value: \"true\"\n    extraEnvs: []\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\ntyk-operator:\n  nameOverride: \"\"\n  fullnameOverride: \"\"\n  # envFrom loads environment variables from the specified resources such as Kubernetes Secret\n  # to the Tyk Operator Controller Manager pod.\n  envFrom:\n    - secretRef:\n        name: tyk-operator-conf\n  # envVars adds environment variables to the Tyk Operator Controller Manager pod.\n  envVars:\n    - name: TYK_HTTPS_INGRESS_PORT\n      value: \"8443\"\n    - name: TYK_HTTP_INGRESS_PORT\n      value: \"8080\"\n  image:\n    # image repository for Tyk Operator\n    repository: tykio/tyk-operator\n    # image pull policy\n    pullPolicy: IfNotPresent\n    # image tag for Tyk Operator\n    tag: \"v1.0.0\"\n  # number for replicas for Tyk Operator deployment.\n  replicaCount: 1\n  # imagePullSecrets specify imagePullSecrets for ServiceAccount\n  imagePullSecrets: []\n  # extraVolumes is a list of volumes to be added to the pod\n  # extraVolumes:\n  #   - name: ca-certs\n  #     secret:\n  #       secretName: ca-certs\n  #   - name: ca-certs\n  #     configMap:\n  #       name: custom-ca-configmap\n  extraVolumes: []\n\n  # extraVolumeMounts is a list of volume mounts to be added to the pod\n  # extraVolumeMounts:\n  #   - name: ca-certs\n  #     mountPath: /etc/ssl/certs/your-cert.pem\n  #     subPath: your-cert.pem\n  #     readOnly: false\n  extraVolumeMounts: []\n\n  # healthProbePort identifies the port the Controller Manager will listen on. Used by liveness and readiness probes\n  healthProbePort: 8081\n  # metricsPort identifies the port on which Tyk Operator metrics are served\n  metricsPort: 8080\n  # webhookPort identifies the port on which webhooks are handled\n  webhookPort: 9443\n\n  annotations: {}\n  podAnnotations: {}\n  podSecurityContext:\n    allowPrivilegeEscalation: false\n  resources: {}\n  nodeSelector: {}\n  hostNetwork: false\n\n  # rbac specifies necessary resources for kube-rbac-proxy.\n  rbac:\n    resources: {}\n    # specify custom/internal repo name for kube-rbac-proxy container\n    image:\n      repository: gcr.io/kubebuilder/kube-rbac-proxy\n      pullPolicy: IfNotPresent\n      tag: \"v0.8.0\"\n    port: 8443\n\n  # serviceMonitor decides deploying ServiceMonitor if Prometheus Operator scrapes /metrics.\n  # By default it is set to false and set it to true to enable deploying Service Monitor.\n  # Tyk Operator publishes a collection of performance metrics for each controller.\n  # These metrics can be scraped by Prometheus Operator, by deploying ServiceMonitor resource.\n  serviceMonitor: false\n\n\ntyk-pump:\n  ## Default values for tyk-pump chart.\n  ## This is a YAML-formatted file.\n  ## Declare variables to be passed into your templates.\n  ## See Tyk Helm documentation for installation details:\n  ## https://tyk.io/docs/tyk-oss/ce-helm-chart/\n  ## Registry for all Tyk images - https://hub.docker.com/u/tykio\n\n  # Overrides chart name. It is truncated to 63 characters.\n  # Default value: tyk-pump.name\n  nameOverride: \"\"\n\n  # Overrides app name. IT is truncated to 63 characters.\n  # Default value: tyk-pump.fullname\n  fullnameOverride: \"\"\n\n  # If pump is enabled the Gateway will create and collect analytics data to send\n  # to a data store of your choice. These can be set up in the pump config. The\n  # possible pump configs can be found here:\n  # https://github.com/TykTechnologies/tyk-pump#configuration\n  pump:\n    # number for replicas for pump deployment\n    replicaCount: 1\n\n    # podAnnotations is annotations to be added to Tyk Pump pod.\n    # It takes key-value pairs.\n    # There are no required annotation field for Tyk Pump.\n    #\n    # podAnnotations:\n    #   yourkey: value\n    #   image: yourhub\n    podAnnotations: {}\n\n    # podLabels specifies labels to be added in pump Pod\n    podLabels: {}\n\n    image:\n      # image repository for Tyk pump\n      repository: docker.tyk.io/tyk-pump/tyk-pump\n\n      # tag for Tyk pump\n      tag: v1.11.0\n\n      # image pull policy\n      pullPolicy: IfNotPresent\n\n    # image pull secrets to use when pulling images from repository\n    imagePullSecrets: []\n\n    service:\n      # Tyk Pump svc is disabled by default. Set it to true to enable it.\n      enabled: false\n\n      # type specifies type of the service.\n      type: ClusterIP\n\n      # port specifies the port exposed by the service.\n      port: 9090\n\n      # externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or\n      # cluster-wide endpoints, while using LoadBalancer type of service.\n      externalTrafficPolicy: Local\n\n      # annotations specifies annotations to be added Tyk Pump service.\n      annotations: {}\n\n    # containerPort represents the port where Tyk Pump serve the metrics, for instance metrics for Prometheus.\n    # The default port is 9090.\n    containerPort: 9090\n\n    # backend defines the pumps to be created by default, as an array of string.\n    # Supported backends are:\n    #   - \"mongo\": Enables Mongo, Mongo Aggregate and Mongo Selective Pump\n    #   - \"mongo-aggregate\": Enables ONLY Mongo Aggregate AND Mongo Graph Pump\n    #   - \"mongo-selective\": Enables ONLY Mongo Selective\n    #   - \"postgres\": Enables Postgres Aggregate, Postgres Graph Aggregate, SQL Pump and SQL graph pump\n    #   - \"postgres-aggregate\": Enables ONLY SQL Aggregate AND SQL Graph Aggregate\n    #   - \"postgres-pump\": Enables ONLY SQL Pump AND SQL graph pump\n    #   - \"prometheus\": Enables Prometheus Pump. See pump.prometheusPump for Prometheus Pump configurations.\n    #   - \"hybrid\": Enables Hybrid Pump\n    # If you would like to use other backends such as ElasticSearch, please\n    # configure the backend via environment variables.\n    backend:\n      - \"prometheus\"\n\n    # uptimePumpBackend configures uptime Tyk Pump. [\"\", \"mongo\", \"postgres\"].\n    # Set it to \"\" for disabling uptime Tyk Pump. By default, uptime pump is disabled.\n    uptimePumpBackend: \"\"\n\n    # prometheusPump configures Tyk Pump to expose Prometheus metrics.\n    # Please add \"prometheus\" to .Values.pump.backend in order to enable Prometheus Pump.\n    # The container port where Tyk Pump serves the metrics to Prometheus can be configured\n    # via .pump.containerPort field.\n    prometheusPump:\n      # host represents the host without port, where Tyk Pump serve the metrics for Prometheus.\n      host: \"\"\n      # path represents the path to the Prometheus metrics endpoint. For example /metrics.\n      path: /metrics\n      # customMetrics allows defining custom Prometheus metrics for Tyk Pump.\n      # It accepts a string that represents a JSON object. For instance,\n      #\n      # customMetrics: '[{\"name\":\"tyk_http_requests_total\",\"description\":\"Total of API requests\",\"metric_type\":\"counter\",\"labels\":[\"response_code\",\"api_name\",\"method\",\"api_key\",\"alias\",\"path\"]},          {              \"name\":\"tyk_http_latency\",              \"description\":\"Latency of API requests\",              \"metric_type\":\"histogram\",              \"labels\":[\"type\",\"response_code\",\"api_name\",\"method\",\"api_key\",\"alias\",\"path\"]          }]'\n      customMetrics: \"\"\n      # If you are using prometheus Operator, set the fields in the section below.\n      prometheusOperator:\n        # enabled determines whether the Prometheus Operator is in use or not. By default,\n        # it is disabled.\n        # Tyk Pump can be monitored with PodMonitor Custom Resource of Prometheus Operator.\n        # If enabled, PodMonitor resource is created based on .Values.pump.prometheusPump.prometheusOperator.podMonitorSelector\n        # for Tyk Pump.\n        enabled: false\n        # podMonitorSelector represents a podMonitorSelector of your Prometheus resource. So that\n        # your Prometheus resource can select PodMonitor objects based on selector defined here.\n        # Please set this field to the podMonitorSelector field of your monitoring.coreos.com/v1\n        # Prometheus resource's spec.\n        #\n        # You can check the podMonitorSelector via:\n        #   kubectl describe prometheuses.monitoring.coreos.com \u003cPROMETHEUS_POD\u003e\n        podMonitorSelector:\n          release: prometheus-stack\n\n    # sqlGraphPump configures values to be used to configure tyk sql graph pump.\n    sqlGraphPump:\n      # tableName is the name of the table that will be created and used by the sql graph pump\n      tableName: \"tyk_analytics_graphs\"\n\n    # mongoGraphPump configures values to be used to configure tyk mongo graph pump.\n    mongoGraphPump:\n      # collectionName is the name of the collection that will be created and used by the mongo graph pump\n      collectionName: \"tyk_graph_analytics\"\n\n    # We usually recommend not to specify default resources and to leave this\n    # as a conscious choice for the user. This also increases chances charts\n    # run on environments with little resources, such as Minikube. If you do\n    # want to specify resources, uncomment the following lines, adjust them\n    # as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n    resources: {}\n\n    # securityContext values for pump pod. All fields from PodSecurityContext object can be added here.\n    securityContext:\n      runAsUser: 1000\n      fsGroup: 2000\n      runAsNonRoot: true\n\n    # containerSecurityContext values for pump container. All fields from SecurityContext object can be added here.\n    containerSecurityContext:\n      runAsNonRoot: true\n      runAsUser: 1000\n      allowPrivilegeEscalation: false\n      privileged: false\n      readOnlyRootFilesystem: true\n      seccompProfile:\n        type: RuntimeDefault\n      capabilities:\n        drop:\n          - ALL\n\n    # node labels for pump pod assignment\n    nodeSelector: {}\n\n    # tolerations for pump pod assignment\n    tolerations: []\n\n    # affinity for pump pod assignment\n    affinity: {}\n\n    # extraEnvs is used to set environment variables in pump container\n    # - name: TYK_PMP_PURGEDELAY\n    #   value: 30\n    extraEnvs: []\n\n    # extraVolumes is a list of volumes to be added to the pod\n    # extraVolumes:\n    #   - name: ca-certs\n    #     secret:\n    #       defaultMode: 420\n    #       secretName: ca-certs\n    extraVolumes: []\n\n    # extraVolumeMounts is a list of volume mounts to be added to the pod\n    # extraVolumeMounts:\n    #   - name: ca-certs\n    #     mountPath: /etc/ssl/certs/ca-certs.crt\n    #     readOnly: true\n    extraVolumeMounts: []\n\n"
            ],
            "verify": false,
            "version": "2.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.redis",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "tyk",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "tyk",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "tyk",
                "resource_version": "2719649",
                "uid": "62ba7aae-b342-4d16-9206-dee4c3113665"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "gateway_nodeport",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "tyk/gateway-svc-tyk-oss-tyk-gateway-nodeport",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "gateway-svc-tyk-oss-tyk-gateway"
                },
                "name": "gateway-svc-tyk-oss-tyk-gateway-nodeport",
                "namespace": "tyk",
                "resource_version": "2721404",
                "uid": "2d2c3c12-aad0-4804-838c-16fcaca8c093"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.108.52.235",
                "cluster_ips": [
                  "10.108.52.235"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 30622,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "gateway-tyk-oss-tyk-gateway"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.redis",
            "helm_release.tyk",
            "random_password.redis_password"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "redis_password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$hptFCrLkHXVf/fmZsGzCG.T2sDMAHy7AKGDtPoBqE9ITUfRMOBS4m",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "Fqe6hqnLPxrNLFWE",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ]
          ]
        }
      ]
    }
  ],
  "check_results": null
}
